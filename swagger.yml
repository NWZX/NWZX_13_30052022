swagger: '2.0'
info:
    title: 'Bank Argent API documentation'
    description: 'Contains all available API endpoints in this codebase'
    version: '1.0.0'
    termsOfService: 'http://swagger.io/terms/'
host: 'localhost:3001'
basePath: '/api/v1'
schemes:
    - 'http'
paths:
    /user/login:
        post:
            tags:
                - 'User Module'
            summary: 'Login'
            description: 'API for Login'
            parameters:
                - in: 'body'
                  name: 'body'
                  description: 'Login Payload'
                  required: true
                  schema:
                      $ref: '#/definitions/Login'
            produces:
                - 'application/json'
            responses:
                '200':
                    description: 'Login Successfully'
                    schema:
                        $ref: '#/definitions/LoginResponse'
                '400':
                    description: 'Invalid Fields'
                '500':
                    description: 'Internal Server Error'
    /user/signup:
        post:
            tags:
                - 'User Module'
            summary: 'Signup'
            description: 'API for Signup'
            parameters:
                - in: 'body'
                  name: 'body'
                  description: 'Signup Payload'
                  required: true
                  schema:
                      $ref: '#/definitions/User'
            produces:
                - 'application/json'
            responses:
                '200':
                    description: 'Signup Successfully'
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: 'Invalid Fields'
                '500':
                    description: 'Internal Server Error'
    /user/profile:
        post:
            tags:
                - 'User Module'
            summary: 'User Profile API'
            description: 'API for fetching a user profile'
            parameters:
                - in: 'header'
                  name: 'Authorization'
                  description: 'Attach Bearer JWT token'
                  type: 'string'
                  required: true
            produces:
                - 'application/json'
            responses:
                '200':
                    description: 'User profile retrieved successully'
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: 'Invalid Fields'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
        put:
            tags:
                - 'User Module'
            summary: 'User Profile API'
            description: 'API for updating a user profile'
            parameters:
                - in: 'header'
                  name: 'Authorization'
                  description: 'Attach Bearer JWT token'
                  type: 'string'
                  required: true
                - in: 'body'
                  name: 'body'
                  description: 'Update user profile attributes'
                  required: true
                  schema:
                      $ref: '#/definitions/UserProfile'
            produces:
                - 'application/json'
            responses:
                '200':
                    description: 'User profile retrieved successully'
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: 'Invalid Fields'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
    /transactions/{id}:
        get:
            tags:
                - 'Transaction Module'
            summary: 'Get one transactions'
            description: 'API to get one transaction'
            operationId: 'findTransactionById'
            produces:
                - 'application/json'
            parameters:
                - name: Authorization
                  in: 'header'
                  description: Attach Bearer JWT token
                  type: 'string'
                  required: true
                - name: 'id'
                  in: 'path'
                  description: 'Transaction unique identifiant'
                  required: true
                  type: 'string'
                  default: 'available'
            responses:
                '200':
                    description: 'successful operation'
                    schema:
                        $ref: '#/definitions/Transaction'
                '400':
                    description: 'Invalid status value'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
        put:
            tags:
                - 'Transaction Module'
            summary: 'Update a transaction'
            description: 'API to update a transaction'
            operationId: 'updateTransaction'
            parameters:
                - name: Authorization
                  in: 'header'
                  description: Attach Bearer JWT token
                  type: 'string'
                  required: true
                - name: 'body'
                  in: 'body'
                  description: 'Transaction payload'
                  required: true
                  schema:
                      $ref: '#/definitions/Transaction'
            responses:
                '201':
                    description: 'successful operation'
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '204':
                    description: 'successful operation'
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: 'Invalid status value'
                '401':
                    description: 'Invalid token'
                '404':
                    description: 'Transaction not found'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
        delete:
            tags:
                - 'Transaction Module'
            summary: 'Delete a transaction'
            description: 'API to delete a transaction'
            operationId: 'deleteTransaction'
            parameters:
                - name: Authorization
                  in: 'header'
                  description: Attach Bearer JWT token
                  type: 'string'
                  required: true
                - name: 'id'
                  in: 'path'
                  description: 'Transaction unique identifiant'
                  required: true
                  type: 'string'
            responses:
                '204':
                    description: 'successful operation'
                    schema:
                        $ref: '#/definitions/Transaction'
                '400':
                    description: 'Invalid status value'
                '401':
                    description: 'Invalid token'
                '404':
                    description: 'Transaction not found'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
    /transactions:
        get:
            tags:
                - 'Transaction Module'
            summary: 'Get all transactions'
            description: 'API to get multiple transaction'
            operationId: 'findAllTransactionsByUserId'
            produces:
                - 'application/json'
            parameters:
                - name: Authorization
                  in: 'header'
                  description: Attach Bearer JWT token
                  type: 'string'
                  required: true
                - name: 'startAt'
                  in: 'query'
                  description: 'First transaction ID to return'
                  required: false
                  type: 'string'
                - name: 'limit'
                  in: 'query'
                  description: 'Number of records to return'
                  required: false
                  type: 'integer'
                  default: 100
                - name: 'mounth'
                  in: 'query'
                  description: 'Month to filter transactions'
                  required: false
                  type: 'integer'
                  default: '0'
                
            responses:
                '200':
                    description: 'successful operation'
                    schema:
                        type: 'array'
                        items:
                            $ref: '#/definitions/Transaction'
                '400':
                    description: 'Invalid status value'
                '401':
                    description: 'Invalid token'
                '404':
                    description: 'Transaction not found'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
        post:
            tags:
                - 'Transaction Module'
            summary: 'Create a new transaction'
            description: 'API to create a transaction'
            operationId: 'addTransaction'
            parameters:
                - name: Authorization
                  in: 'header'
                  description: Attach Bearer JWT token
                  type: 'string'
                  required: true
                - name: 'body'
                  in: 'body'
                  description: 'Transaction payload'
                  required: true
                  schema:
                      $ref: '#/definitions/Transaction'
            responses:
                '201':
                    description: 'successful operation'
                    schema:
                        $ref: '#/definitions/ApiResponse'
                '400':
                    description: 'Invalid status value'
                '401':
                    description: 'Invalid token'
                '500':
                    description: 'Internal Server Error'
            security:
                - Bearer: []
securityDefinitions:
    Bearer:
        type: 'apiKey'
        name: 'Authorization'
        in: 'header'
definitions:
    User:
        properties:
            email:
                type: 'string'
                description: 'user email'
            password:
                type: 'string'
                description: 'user password'
            firstName:
                type: 'string'
                description: 'user first name'
            lastName:
                type: 'string'
                description: 'user last name'
    Transaction:
        properties:
            id:
                type: 'string'
                description: 'Transaction UID'
            timestamp:
                type: 'integer'
                format: 'int64'
                description: 'Transaction date'
            description:
                type: 'string'
            amount:
                type: 'integer'
                format: 'int64'
                description: 'Transaction amount'
            balance:
                type: 'integer'
                format: 'int64'
                description: 'Money remaining after transaction'
            type:
                type: 'string'
                description: 'Transaction associated type'
            category:
                type: 'string'
                description: 'Transaction associated category'
            notes:
                type: 'string'
    Login:
        properties:
            email:
                type: 'string'
                description: 'user email'
            password:
                type: 'string'
                description: 'user password'
    ApiResponse:
        type: 'object'
        properties:
            status:
                type: 'integer'
            message:
                type: 'string'
            body:
                type: 'object'
                properties:
                    id:
                        type: 'string'
                    email:
                        type: 'string'
    LoginResponse:
        type: 'object'
        properties:
            token:
                type: 'string'
    UserProfile:
        type: 'object'
        properties:
            firstName:
                type: 'string'
            lastName:
                type: 'string'
